openapi: "3.0.2"
info:
  title: NOTES-APP
  version: "1.0.0"

components:
  # Authentication using bearer token
  securitySchemes:
    bearerAuth:
      description: "#### Example: Bearer [TOKEN]"
      type: http
      scheme: bearer
      bearerFormat: JWT

  # Response message
  responses:
    Success:
      description: |
        - success
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: success

    UnprocessableEntity:
      description: |
        - Unprocessable Entity
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: validation error

    ConflictError:
      description: |
        - ConflictError
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: conflict error

    BadRequestError:
      description: |
        - bad request error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: bad request error

    UnauthorizedError:
      description: |
        - Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized

    NotFoundError:
      description: |
        - NotFoundError
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Not Found

paths:
  /auth/register:
    post:
      summary: Register
      description: |
        - User registration
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  example: rutvik makvana
                email:
                  type: string
                  example: rutvik@mailinator.com
                password:
                  type: string
                  example: abcd@123

              required:
                - fullName
                - email
                - password

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /auth/login:
    post:
      summary: Login user
      description: |
        - login.
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: rutvik@mailinator.com
                password:
                  type: string
                  example: abcd@123
              required:
                - email
                - password
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"

  /auth/logout:
    post:
      summary: Logout
      description: |
        - logout from this device.
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          $ref: "#/components/responses/Success"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

  /note/add-note:
    post:
      summary: Add Note
      description: |
        - Add Note
      tags:
        - Note
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: test
                content:
                  type: string
                  example: test of content
                tags:
                  type: array
                  example: ["viral", "trending"]

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "401":
          $ref: "#/components/responses/UnauthorizedError"

  /note/edit-note/{noteId}:
    put:
      summary: Edit Note
      description: |
        - Edit Note
      tags:
        - Note
      security:
        - bearerAuth: []

      parameters:
        - in: path
          name: noteId
          schema:
            type: string
            example: 666d589428caabae12712a38

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: test
                content:
                  type: string
                  example: test of content
                tags:
                  type: array
                  example: ["viral", "trending"]
                isPinned:
                  type: boolean
                  example: false

      responses:
        "200":
          $ref: "#/components/responses/Success"
        "409":
          $ref: "#/components/responses/ConflictError"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
